#include <iostream>

using namespace std;

int main()
{
    int n, a[100][100],k=1,i=0,j=0;
    short posoka =0; // 0 za nadqsno, 1 za nadolu, 2 za nalqvo, 3 za nagore
    cin>>n;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            a[i][j]=0;
        }
    }

    while(k<=n*n)
    {
        if(a[i][j]==0) { a[i][j]=k; k++; }
        switch(posoka)
        {
            case 0 : { if(a[i][j+1]==0 && j+1<n) { j++; } else { posoka=(posoka+1)%4;} break; }
            case 1 : { if(a[i+1][j]==0 && i+1<n) { i++; } else { posoka=(posoka+1)%4;} break; }
            case 2 : { if(a[i][j-1]==0 && j-1>=0) { j--; } else { posoka=(posoka+1)%4;} break; }
            case 3 : { if(a[i-1][j]==0 && i-1>=0) { i--; }  else { posoka=(posoka+1)%4;} break; }
        }
    }

    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            cout<<a[i][j]<<'\t';
        }
        cout<<endl;
    }
    
    //**********************************************************
    //Vtora zadacha:
    
    int sum[100] = {0,}; // Прави целият масив с нули

    // Правим нов масив от сбора на елементите на всеки стълб
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++)
        {
            sum[j] += a[i][j];
        }
        cout<<endl;
    }

    //Тука просто си го извеждаме да видим че бачка
    for(int j=0; j<m; j++)
    {
        cout<<sum[j]<<'\t';
    }
    cout<<endl;

    //Тука използваме BubbleSort, за да сортираме колоните на масива a[] спрямо елементите в масива sum[]
    for( int i = 0; i<m-1; i++)
    {
        for (int j = i+1; j<m; j++)
        {
            if(sum[i] > sum[j])
            {
                for (int k = 0; k<n; k++)
                {
                    a[k][i] += a[k][j];
                    a[k][j] = a[k][i] - a[k][j];
                    a[k][i] = a[k][i] - a[k][j];
                }
            }
        }
    }

    for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++)
        {
            cout<<a[i][j]<<'\t';
        }
        cout<<endl;
    }

    return 0;
}
